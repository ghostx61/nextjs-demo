{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/n.shantaram.hatankar/Desktop/code/Academind React course/meetup-app-nextjs/pages/meetup/[meetupId].js\";\n// import { useRouter } from 'next/router';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport Head from 'next/head';\nimport { Fragment } from 'react';\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\n\nfunction MeetupDetailsPage(props) {\n  // const router = useRouter();\n  // const meetupId = router.query.meetupId;\n  const meetupData = props.meetupData; // const meetupData = { id: 'm1', title: 'title', address: 'addresss', image: 'fdafda', description: 'desc' };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetails, {\n      id: meetupData.id,\n      title: meetupData.title,\n      address: meetupData.address,\n      description: meetupData.description,\n      image: meetupData.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://admin:RVnCTJpVZV3PU5rB@cluster0.hyfvxbf.mongodb.net/meetupsDB');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetupIds = await meetupsCollection.find({}).project({\n    _id: 1\n  }).toArray();\n  client.close();\n  const paths = meetupIds.map(el => ({\n    params: {\n      meetupId: el._id.toString()\n    }\n  }));\n  console.log(paths);\n  return {\n    fallback: false,\n    paths\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId; // const meetupId = '63abf5325780cfcf72d5087a';\n\n  const client = await MongoClient.connect('mongodb+srv://admin:RVnCTJpVZV3PU5rB@cluster0.hyfvxbf.mongodb.net/meetupsDB');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  let meetupData = {\n    id: meetup._id.toString(),\n    title: meetup.title,\n    address: meetup.address,\n    image: meetup.image,\n    description: meetup.description\n  };\n  delete meetupData._id;\n  return {\n    props: {\n      meetupData\n    }\n  };\n}\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["/Users/n.shantaram.hatankar/Desktop/code/Academind React course/meetup-app-nextjs/pages/meetup/[meetupId].js"],"names":["MongoClient","ObjectId","Head","Fragment","MeetupDetails","MeetupDetailsPage","props","meetupData","title","description","id","address","image","getStaticPaths","client","connect","db","meetupsCollection","collection","meetupIds","find","project","_id","toArray","close","paths","map","el","params","meetupId","toString","console","log","fallback","getStaticProps","context","meetup","findOne"],"mappings":"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","sourcesContent":["// import { useRouter } from 'next/router';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport Head from 'next/head';\nimport { Fragment } from 'react';\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\n\nfunction MeetupDetailsPage(props) {\n    // const router = useRouter();\n    // const meetupId = router.query.meetupId;\n    const meetupData = props.meetupData;\n    // const meetupData = { id: 'm1', title: 'title', address: 'addresss', image: 'fdafda', description: 'desc' };\n    return (\n        <Fragment>\n            <Head>\n                <title>{meetupData.title}</title>\n                <meta name='description' content={meetupData.description} />\n            </Head>\n            <MeetupDetails\n                id={meetupData.id}\n                title={meetupData.title}\n                address={meetupData.address}\n                description={meetupData.description}\n                image={meetupData.image}\n            />\n        </Fragment>\n    );\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect('mongodb+srv://admin:RVnCTJpVZV3PU5rB@cluster0.hyfvxbf.mongodb.net/meetupsDB');\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n    const meetupIds = await meetupsCollection.find({}).project({ _id: 1 }).toArray();\n    client.close();\n    const paths = meetupIds.map(el => ({\n        params: {\n            meetupId: el._id.toString()\n        }\n    }));\n    console.log(paths);\n    return {\n        fallback: false,\n        paths,\n    };\n}\n\nexport async function getStaticProps(context) {\n    const meetupId = context.params.meetupId;\n    // const meetupId = '63abf5325780cfcf72d5087a';\n    const client = await MongoClient.connect(\n        'mongodb+srv://admin:RVnCTJpVZV3PU5rB@cluster0.hyfvxbf.mongodb.net/meetupsDB'\n    );\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n    const meetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\n    let meetupData = {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description\n    };\n    delete meetupData._id;\n    return {\n        props: {\n            meetupData,\n        },\n    };\n}\n\nexport default MeetupDetailsPage;\n"]},"metadata":{},"sourceType":"module"}