{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/n.shantaram.hatankar/Desktop/code/Academind React course/meetup-app-nextjs/pages/meetup/[meetupId].js\";\n// import { useRouter } from 'next/router';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\n\nfunction MeetupDetailsPage(props) {\n  // const router = useRouter();\n  // const meetupId = router.query.meetupId;\n  const meetupData = props.meetupData;\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    id: meetupData.id,\n    title: meetupData.title,\n    address: meetupData.addresss,\n    description: meetupData.descrition,\n    image: meetupData.image\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n} // export async function getStaticPaths() {\n//     const client = await MongoClient.connect('mongodb+srv://admin:RVnCTJpVZV3PU5rB@cluster0.hyfvxbf.mongodb.net/meetupsDB');\n//     const db = client.db();\n//     const meetupsCollection = db.collection('meetups');\n//     const meetupIds = meetupsCollection.find({}, { _id: 1 });\n//     const paths = meetupIds.map(id => ({\n//         params: {\n//             meetupId: id.toString()\n//         }\n//     }));\n//     console.log(paths);\n//     return {\n//         fallback: false,\n//         // paths,\n//         paths: [{\n//             params: {\n//                 meetupId: \"63abf5325780cfcf72d5087a\"\n//             }\n//         }]\n//     };\n// }\n\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId; // const client = await MongoClient.connect('mongodb+srv://admin:RVnCTJpVZV3PU5rB@cluster0.hyfvxbf.mongodb.net/meetupsDB');\n  // const db = client.db();\n  // const meetupsCollection = db.collection('meetups');\n  // const meetup = meetupsCollection.findOne({ _id: ObjectId(meetupId) });\n  // const meetupData = { ...meetup, id: meetup._id };\n\n  const meetupData = {\n    id: 'm1',\n    title: 'title',\n    address: 'addresss',\n    image: 'fdafda',\n    description: 'desc'\n  };\n  return {\n    props: {\n      meetupData\n    }\n  };\n}\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["/Users/n.shantaram.hatankar/Desktop/code/Academind React course/meetup-app-nextjs/pages/meetup/[meetupId].js"],"names":["MongoClient","ObjectId","MeetupDetails","MeetupDetailsPage","props","meetupData","id","title","addresss","descrition","image","getStaticProps","context","meetupId","params","address","description"],"mappings":";;AAAA;AACA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B;AACA;AACA,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;AACA,sBACI,QAAC,aAAD;AACI,IAAA,EAAE,EAAEA,UAAU,CAACC,EADnB;AAEI,IAAA,KAAK,EAAED,UAAU,CAACE,KAFtB;AAGI,IAAA,OAAO,EAAEF,UAAU,CAACG,QAHxB;AAII,IAAA,WAAW,EAAEH,UAAU,CAACI,UAJ5B;AAKI,IAAA,KAAK,EAAEJ,UAAU,CAACK;AALtB;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAeD,QAAhC,CAD0C,CAE1C;AACA;AAEA;AACA;AACA;;AACA,QAAMR,UAAU,GAAG;AAAEC,IAAAA,EAAE,EAAE,IAAN;AAAYC,IAAAA,KAAK,EAAE,OAAnB;AAA4BQ,IAAAA,OAAO,EAAE,UAArC;AAAiDL,IAAAA,KAAK,EAAE,QAAxD;AAAkEM,IAAAA,WAAW,EAAE;AAA/E,GAAnB;AACA,SAAO;AACHZ,IAAAA,KAAK,EAAE;AACHC,MAAAA;AADG;AADJ,GAAP;AAKH;AAED,eAAeF,iBAAf","sourcesContent":["// import { useRouter } from 'next/router';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\n\nfunction MeetupDetailsPage(props) {\n    // const router = useRouter();\n    // const meetupId = router.query.meetupId;\n    const meetupData = props.meetupData;\n    return (\n        <MeetupDetails\n            id={meetupData.id}\n            title={meetupData.title}\n            address={meetupData.addresss}\n            description={meetupData.descrition}\n            image={meetupData.image}\n        />\n    );\n}\n\n// export async function getStaticPaths() {\n//     const client = await MongoClient.connect('mongodb+srv://admin:RVnCTJpVZV3PU5rB@cluster0.hyfvxbf.mongodb.net/meetupsDB');\n//     const db = client.db();\n\n//     const meetupsCollection = db.collection('meetups');\n//     const meetupIds = meetupsCollection.find({}, { _id: 1 });\n//     const paths = meetupIds.map(id => ({\n//         params: {\n//             meetupId: id.toString()\n//         }\n//     }));\n//     console.log(paths);\n//     return {\n//         fallback: false,\n//         // paths,\n//         paths: [{\n//             params: {\n//                 meetupId: \"63abf5325780cfcf72d5087a\"\n//             }\n//         }]\n//     };\n// }\n\nexport async function getStaticProps(context) {\n    const meetupId = context.params.meetupId;\n    // const client = await MongoClient.connect('mongodb+srv://admin:RVnCTJpVZV3PU5rB@cluster0.hyfvxbf.mongodb.net/meetupsDB');\n    // const db = client.db();\n\n    // const meetupsCollection = db.collection('meetups');\n    // const meetup = meetupsCollection.findOne({ _id: ObjectId(meetupId) });\n    // const meetupData = { ...meetup, id: meetup._id };\n    const meetupData = { id: 'm1', title: 'title', address: 'addresss', image: 'fdafda', description: 'desc' };\n    return {\n        props: {\n            meetupData,\n        },\n    };\n}\n\nexport default MeetupDetailsPage;\n"]},"metadata":{},"sourceType":"module"}