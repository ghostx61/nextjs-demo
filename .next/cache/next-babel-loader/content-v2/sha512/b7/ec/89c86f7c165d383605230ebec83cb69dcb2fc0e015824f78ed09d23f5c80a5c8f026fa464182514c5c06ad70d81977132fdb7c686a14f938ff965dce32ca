{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/n.shantaram.hatankar/Desktop/code/Academind React course/meetup-app-nextjs/pages/meetup/[meetupId].js\";\n// import { useRouter } from 'next/router';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\n\nfunction MeetupDetailsPage(props) {\n  // const router = useRouter();\n  // const meetupId = router.query.meetupId;\n  const meetupData = props.meetupData; // const meetupData = { id: 'm1', title: 'title', address: 'addresss', image: 'fdafda', description: 'desc' };\n\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    id: meetupData.id,\n    title: meetupData.title,\n    address: meetupData.address,\n    description: meetupData.description,\n    image: meetupData.image\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  // const client = await MongoClient.connect('mongodb+srv://admin:RVnCTJpVZV3PU5rB@cluster0.hyfvxbf.mongodb.net/meetupsDB');\n  // const db = client.db();\n  // const meetupsCollection = db.collection('meetups');\n  // const meetupIds = meetupsCollection.find({}, { _id: 1 });\n  // console.log(meetupIds);\n  // client.close();\n  // const paths = meetupIds.map(id => ({\n  //     params: {\n  //         meetupId: id.toString()\n  //     }\n  // }));\n  return {\n    fallback: false,\n    // paths,\n    paths: [{\n      params: {\n        meetupId: 'm1'\n      }\n    }]\n  };\n}\nexport async function getStaticProps(context) {\n  // const meetupId = context.params.meetupId;\n  const meetupId = '63abf5325780cfcf72d5087a';\n  const client = await MongoClient.connect('mongodb+srv://admin:RVnCTJpVZV3PU5rB@cluster0.hyfvxbf.mongodb.net/meetupsDB');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  let meetupData = {\n    id: meetup._id.toString(),\n    title: meetup.title,\n    address: meetup.address,\n    image: meetup.image,\n    description: meetup.description\n  };\n  delete meetupData._id;\n  console.log(\"static props\");\n  console.log(meetupData); // const meetupData = { id: 'm1', title: 'title', address: 'addresss', image: 'fdafda', description: 'desc' };\n\n  return {\n    props: {\n      meetupData\n    }\n  };\n}\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["/Users/n.shantaram.hatankar/Desktop/code/Academind React course/meetup-app-nextjs/pages/meetup/[meetupId].js"],"names":["MongoClient","ObjectId","MeetupDetails","MeetupDetailsPage","props","meetupData","id","title","address","description","image","getStaticPaths","fallback","paths","params","meetupId","getStaticProps","context","client","connect","db","meetupsCollection","collection","meetup","findOne","_id","toString","console","log"],"mappings":";;AAAA;AACA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B;AACA;AACA,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB,CAH8B,CAI9B;;AACA,sBACI,QAAC,aAAD;AACI,IAAA,EAAE,EAAEA,UAAU,CAACC,EADnB;AAEI,IAAA,KAAK,EAAED,UAAU,CAACE,KAFtB;AAGI,IAAA,OAAO,EAAEF,UAAU,CAACG,OAHxB;AAII,IAAA,WAAW,EAAEH,UAAU,CAACI,WAJ5B;AAKI,IAAA,KAAK,EAAEJ,UAAU,CAACK;AALtB;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEH;AACAC,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN;AADZ,KADG;AAHJ,GAAP;AAWH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C;AACA,QAAMF,QAAQ,GAAG,0BAAjB;AACA,QAAMG,MAAM,GAAG,MAAMlB,WAAW,CAACmB,OAAZ,CACjB,6EADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAAEC,IAAAA,GAAG,EAAExB,QAAQ,CAACc,QAAD;AAAf,GAA1B,CAArB;AACA,MAAIV,UAAU,GAAG;AACbC,IAAAA,EAAE,EAAEiB,MAAM,CAACE,GAAP,CAAWC,QAAX,EADS;AAEbnB,IAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAFD;AAGbC,IAAAA,OAAO,EAAEe,MAAM,CAACf,OAHH;AAIbE,IAAAA,KAAK,EAAEa,MAAM,CAACb,KAJD;AAKbD,IAAAA,WAAW,EAAEc,MAAM,CAACd;AALP,GAAjB;AAOA,SAAOJ,UAAU,CAACoB,GAAlB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYvB,UAAZ,EAnB0C,CAoB1C;;AACA,SAAO;AACHD,IAAAA,KAAK,EAAE;AACHC,MAAAA;AADG;AADJ,GAAP;AAKH;AAED,eAAeF,iBAAf","sourcesContent":["// import { useRouter } from 'next/router';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\n\nfunction MeetupDetailsPage(props) {\n    // const router = useRouter();\n    // const meetupId = router.query.meetupId;\n    const meetupData = props.meetupData;\n    // const meetupData = { id: 'm1', title: 'title', address: 'addresss', image: 'fdafda', description: 'desc' };\n    return (\n        <MeetupDetails\n            id={meetupData.id}\n            title={meetupData.title}\n            address={meetupData.address}\n            description={meetupData.description}\n            image={meetupData.image}\n        />\n    );\n}\n\nexport async function getStaticPaths() {\n    // const client = await MongoClient.connect('mongodb+srv://admin:RVnCTJpVZV3PU5rB@cluster0.hyfvxbf.mongodb.net/meetupsDB');\n    // const db = client.db();\n\n    // const meetupsCollection = db.collection('meetups');\n    // const meetupIds = meetupsCollection.find({}, { _id: 1 });\n    // console.log(meetupIds);\n    // client.close();\n    // const paths = meetupIds.map(id => ({\n    //     params: {\n    //         meetupId: id.toString()\n    //     }\n    // }));\n    return {\n        fallback: false,\n        // paths,\n        paths: [\n            {\n                params: {\n                    meetupId: 'm1',\n                },\n            },\n        ],\n    };\n}\n\nexport async function getStaticProps(context) {\n    // const meetupId = context.params.meetupId;\n    const meetupId = '63abf5325780cfcf72d5087a';\n    const client = await MongoClient.connect(\n        'mongodb+srv://admin:RVnCTJpVZV3PU5rB@cluster0.hyfvxbf.mongodb.net/meetupsDB'\n    );\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n    const meetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\n    let meetupData = {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description\n    };\n    delete meetupData._id;\n    console.log(\"static props\");\n    console.log(meetupData);\n    // const meetupData = { id: 'm1', title: 'title', address: 'addresss', image: 'fdafda', description: 'desc' };\n    return {\n        props: {\n            meetupData,\n        },\n    };\n}\n\nexport default MeetupDetailsPage;\n"]},"metadata":{},"sourceType":"module"}