{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/n.shantaram.hatankar/Desktop/code/Academind React course/meetup-app-nextjs/pages/meetup/[meetupId].js\";\n// import { useRouter } from 'next/router';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\n\nfunction MeetupDetailsPage(props) {\n  // const router = useRouter();\n  // const meetupId = router.query.meetupId;\n  const meetupData = props.meetupData; // const meetupData = { id: 'm1', title: 'title', address: 'addresss', image: 'fdafda', description: 'desc' };\n\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    id: meetupData.id,\n    title: meetupData.title,\n    address: meetupData.address,\n    description: meetupData.description,\n    image: meetupData.image\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://admin:RVnCTJpVZV3PU5rB@cluster0.hyfvxbf.mongodb.net/meetupsDB');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetupIds = await meetupsCollection.find({}).project({\n    _id: 1\n  }).toArray();\n  client.close();\n  const paths = meetupIds.map(el => ({\n    params: {\n      meetupId: el._id.toString()\n    }\n  }));\n  console.log(paths);\n  return {\n    fallback: false,\n    paths // paths: [\n    //     {\n    //         params: {\n    //             meetupId: 'm1',\n    //         },\n    //     },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId; // const meetupId = '63abf5325780cfcf72d5087a';\n\n  const client = await MongoClient.connect('mongodb+srv://admin:RVnCTJpVZV3PU5rB@cluster0.hyfvxbf.mongodb.net/meetupsDB');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  let meetupData = {\n    id: meetup._id.toString(),\n    title: meetup.title,\n    address: meetup.address,\n    image: meetup.image,\n    description: meetup.description\n  };\n  delete meetupData._id;\n  return {\n    props: {\n      meetupData\n    }\n  };\n}\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["/Users/n.shantaram.hatankar/Desktop/code/Academind React course/meetup-app-nextjs/pages/meetup/[meetupId].js"],"names":["MongoClient","ObjectId","MeetupDetails","MeetupDetailsPage","props","meetupData","id","title","address","description","image","getStaticPaths","client","connect","db","meetupsCollection","collection","meetupIds","find","project","_id","toArray","close","paths","map","el","params","meetupId","toString","console","log","fallback","getStaticProps","context","meetup","findOne"],"mappings":";;AAAA;AACA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B;AACA;AACA,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB,CAH8B,CAI9B;;AACA,sBACI,QAAC,aAAD;AACI,IAAA,EAAE,EAAEA,UAAU,CAACC,EADnB;AAEI,IAAA,KAAK,EAAED,UAAU,CAACE,KAFtB;AAGI,IAAA,OAAO,EAAEF,UAAU,CAACG,OAHxB;AAII,IAAA,WAAW,EAAEH,UAAU,CAACI,WAJ5B;AAKI,IAAA,KAAK,EAAEJ,UAAU,CAACK;AALtB;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,6EAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,SAAS,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2BC,OAA3B,CAAmC;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAnC,EAA+CC,OAA/C,EAAxB;AACAT,EAAAA,MAAM,CAACU,KAAP;AACA,QAAMC,KAAK,GAAGN,SAAS,CAACO,GAAV,CAAcC,EAAE,KAAK;AAC/BC,IAAAA,MAAM,EAAE;AACJC,MAAAA,QAAQ,EAAEF,EAAE,CAACL,GAAH,CAAOQ,QAAP;AADN;AADuB,GAAL,CAAhB,CAAd;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,SAAO;AACHQ,IAAAA,QAAQ,EAAE,KADP;AAEHR,IAAAA,KAFG,CAGH;AACA;AACA;AACA;AACA;AACA;AACA;;AATG,GAAP;AAWH;AAED,OAAO,eAAeS,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMN,QAAQ,GAAGM,OAAO,CAACP,MAAR,CAAeC,QAAhC,CAD0C,CAE1C;;AACA,QAAMf,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACjB,6EADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMkB,MAAM,GAAG,MAAMnB,iBAAiB,CAACoB,OAAlB,CAA0B;AAAEf,IAAAA,GAAG,EAAEnB,QAAQ,CAAC0B,QAAD;AAAf,GAA1B,CAArB;AACA,MAAItB,UAAU,GAAG;AACbC,IAAAA,EAAE,EAAE4B,MAAM,CAACd,GAAP,CAAWQ,QAAX,EADS;AAEbrB,IAAAA,KAAK,EAAE2B,MAAM,CAAC3B,KAFD;AAGbC,IAAAA,OAAO,EAAE0B,MAAM,CAAC1B,OAHH;AAIbE,IAAAA,KAAK,EAAEwB,MAAM,CAACxB,KAJD;AAKbD,IAAAA,WAAW,EAAEyB,MAAM,CAACzB;AALP,GAAjB;AAOA,SAAOJ,UAAU,CAACe,GAAlB;AACA,SAAO;AACHhB,IAAAA,KAAK,EAAE;AACHC,MAAAA;AADG;AADJ,GAAP;AAKH;AAED,eAAeF,iBAAf","sourcesContent":["// import { useRouter } from 'next/router';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\n\nfunction MeetupDetailsPage(props) {\n    // const router = useRouter();\n    // const meetupId = router.query.meetupId;\n    const meetupData = props.meetupData;\n    // const meetupData = { id: 'm1', title: 'title', address: 'addresss', image: 'fdafda', description: 'desc' };\n    return (\n        <MeetupDetails\n            id={meetupData.id}\n            title={meetupData.title}\n            address={meetupData.address}\n            description={meetupData.description}\n            image={meetupData.image}\n        />\n    );\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect('mongodb+srv://admin:RVnCTJpVZV3PU5rB@cluster0.hyfvxbf.mongodb.net/meetupsDB');\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n    const meetupIds = await meetupsCollection.find({}).project({ _id: 1 }).toArray();\n    client.close();\n    const paths = meetupIds.map(el => ({\n        params: {\n            meetupId: el._id.toString()\n        }\n    }));\n    console.log(paths);\n    return {\n        fallback: false,\n        paths,\n        // paths: [\n        //     {\n        //         params: {\n        //             meetupId: 'm1',\n        //         },\n        //     },\n        // ],\n    };\n}\n\nexport async function getStaticProps(context) {\n    const meetupId = context.params.meetupId;\n    // const meetupId = '63abf5325780cfcf72d5087a';\n    const client = await MongoClient.connect(\n        'mongodb+srv://admin:RVnCTJpVZV3PU5rB@cluster0.hyfvxbf.mongodb.net/meetupsDB'\n    );\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n    const meetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\n    let meetupData = {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description\n    };\n    delete meetupData._id;\n    return {\n        props: {\n            meetupData,\n        },\n    };\n}\n\nexport default MeetupDetailsPage;\n"]},"metadata":{},"sourceType":"module"}